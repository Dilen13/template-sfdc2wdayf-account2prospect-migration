<?xml version="1.0" encoding="UTF-8"?>

<mule version="EE-3.7.2"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
	xmlns:wd-revenue="http://www.mulesoft.org/schema/mule/wd-revenue"
	xmlns:core="http://www.mulesoft.org/schema/mule/core" 
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" 
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/wd-revenue http://www.mulesoft.org/schema/mule/wd-revenue/current/mule-wd-revenue.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<batch:job name="migrateProspectAccountsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:input>
			<sfdc:query config-ref="Salesforce"
				query="dsql:SELECT BillingStreet,BillingCity,BillingPostalCode,BillingState,BillingCountry,Description,Id,Industry,Name,Phone,Type,Website 
FROM Account 
WHERE Type = 'Prospect'"
				fetchSize="${page.size}" doc:name="query Prospect Accounts from Salesforce" />
		</batch:input>
		<batch:process-records>
			<batch:step name="getProspectInWorkdayStep">
				<enricher doc:name="store in recordVar 'wdayfProspectReferenceId'"
					source="#[payload.referenceId]" target="#[recordVars.wdayfProspectReferenceId]">
					<processor-chain doc:name="Get existing">
                        <dw:transform-message doc:name="Create GetProspects Request">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	requestCriteria: {
		prospectID: payload.Id,
		prospectName: null
	},
	responseGroup: {
		includeProspectData: true,
		includeReference: true
	}
} as :object { class : "com.workday.revenue.GetProspectsRequestType" }]]></dw:set-payload>
                        </dw:transform-message>
						<wd-revenue:get-prospects config-ref="Workday_Revenue_Management"
							
							doc:name="getProspect By Id" />
                        <dw:transform-message doc:name="Extract referenceId">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{ referenceId : payload.responseData.prospect[0].prospectData.prospectID }
when payload.responseResults.totalResults != 0 otherwise null]]></dw:set-payload>
                        </dw:transform-message>
					</processor-chain>
				</enricher>
			</batch:step>
			<batch:step name="upsertProspect">
                <logger message="wdayfProspectReferenceId: #[recordVars.wdayfProspectReferenceId]" level="INFO" doc:name="Logger"/>
				<logger message="Upserting Prospect #[payload]" level="INFO" doc:name="Upsert" />
                <dw:transform-message doc:name="Map to PutProspectRequestType">
                    <dw:set-payload resource="classpath:mapToPutProspectRequestType.dwl"></dw:set-payload>
                </dw:transform-message>

				<wd-revenue:put-prospect config-ref="Workday_Revenue_Management" doc:name="Upsert Prospect" />
				<json:object-to-json-transformer doc:name="Object to JSON" />
				<logger message="Upsert Prospect response data: #[payload]"	level="INFO" doc:name="Logger" />
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
            <scatter-gather doc:name="All">
                <processor-chain>
                    <json:object-to-json-transformer doc:name="transform BatchJobInstance to JSON"/>
                    <logger message="Migration process has finished: #[payload]" level="INFO" doc:name="log 'Migration process has finished'"/>
                </processor-chain>
                <processor-chain>
                    <parse-template location="./src/main/resources/email/body.html" doc:name="Parse Template"/>
                    <smtp:outbound-endpoint host="${smtp.host}" port="${smtp.port}" user="${smtp.user}" password="${smtp.password}" connector-ref="gmailConnector" to="${mail.to}" from="${mail.from}" subject="${mail.subject}" responseTimeout="10000" doc:name="send mail"/>
                </processor-chain>
            </scatter-gather>

		</batch:on-complete>
	</batch:job>

	<flow name="mainFlow" processingStrategy="synchronous"
		doc:description="This flow is the entry point to the Template business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.

">
		<batch:execute name="migrateProspectAccountsBatch" doc:name="Batch Execute" />
		<exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy" />
	</flow>

</mule>
