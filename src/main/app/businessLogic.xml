<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:wd-financial="http://www.mulesoft.org/schema/mule/wd-financial" xmlns:core="http://www.mulesoft.org/schema/mule/core" 
xmlns:http="http://www.mulesoft.org/schema/mule/http" 
xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
xmlns:json="http://www.mulesoft.org/schema/mule/json"
xmlns:spring="http://www.springframework.org/schema/beans" 
version="EE-3.6.1" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/wd-financial http://www.mulesoft.org/schema/mule/wd-financial/current/mule-wd-financial.xsd">

 <batch:job name="migrateAccountsBatch">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:input>
            <sfdc:query config-ref="SalesforceA" query="dsql:SELECT AccountNumber, Description, Industry, LastModifiedDate, Name, NumberOfEmployees FROM Account WHERE NumberOfEmployees &gt; 5000 AND (Industry = 'Education' OR Industry = 'Government')" doc:name="query Accounts from Salesforce instance A" fetchSize="${page.size}"/>
        </batch:input> 
        <batch:process-records>
            <batch:step name="getAccountInBStep">
                <enricher source="#[payload]" target="#[recordVars['accountInB']]" doc:name="store result in record var 'accountInB'">
                    <wd-financial:cancel-accounting-journal config-ref="Workday_Financial_Management" doc:name="query Account in Workday"/>

                </enricher>
            </batch:step>
            <batch:step name="createAccountsInBStep" accept-expression="!(payload is NullPayload)">
                <expression-component doc:name="prepare properties for upsert"><![CDATA[payload['Id'] = recordVars['accountInB'] is NullPayload ? null : recordVars['accountInB']['Id'];
payload.remove('LastModifiedDate');]]></expression-component>
                <expression-component doc:name="changing type of field NumberOfEmployees to int"><![CDATA[if (payload.get('NumberOfEmployees') == null) {
	payload.remove('NumberOfEmployees') 
} else {
	int intNumberOfEmployees = Integer.parseInt(payload.get('NumberOfEmployees'));
	payload.put('NumberOfEmployees', intNumberOfEmployees);
}]]></expression-component>
                <batch:commit size="200" doc:name="Batch Commit">
                    <wd-financial:cancel-accounting-journal config-ref="Workday_Financial_Management" doc:name="upsert prospect in Workday"/>

                    <logger message="#[payload]" level="INFO" doc:name="log result"/>
                </batch:commit>
            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <scatter-gather doc:name="All">
                <processor-chain>
            		<json:object-to-json-transformer doc:name="transform BatchJobInstance to JSON"/>
            		<logger message="Migration process has finished: #[payload]" level="INFO" doc:name="log 'Migration process has finished'"/>
                </processor-chain>
				<processor-chain>
                    <parse-template location="./src/main/resources/email/body.html" doc:name="Parse Template"/>
                    <smtp:outbound-endpoint host="${smtp.host}" port="${smtp.port}" user="${smtp.user}" password="${smtp.password}" connector-ref="gmailConnector" to="${mail.to}" from="${mail.from}" subject="${mail.subject}" responseTimeout="10000" doc:name="send mail"/>
				</processor-chain>
            </scatter-gather>
        </batch:on-complete>
    </batch:job>
   
    <flow name="mainFlow"  processingStrategy="synchronous" doc:description="This flow is the entry point to the Template business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.

">
        <batch:execute name="migrateAccountsBatch" doc:name="migrateAccountsBatch"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="catch Exception and call defaultChoiceExceptionStrategy"/>
    </flow>
    
</mule>
